from django.shortcuts import render, get_object_or_404
from .models import Module
from django.core import serializers
from django.http import HttpResponse
import string

LIST_OF_MODULES_TO_SEARCH = {
'abaqus' : ['finite element analysis', 'engineering'],
'abinit' : ['quantum chemistry', 'materials modeling', 'density functional theory', 'optimization', 'simulation'],
'ADF' : ['quantum chemistry', 'molecular dynamics', 'quantum mechanics', 'density functional theory', 'parallel binaries'],
'AFNI' : ['MRI'],
'alphafold' : ['chemistry'],
'alsa-lib' : [],
'ambertools' : ['molecular dynamics'],
'ampl' : [],
'anicalculator': ['genomics', 'ANI', 'sequence classifier'],
'ansys' : ['engineering'],
'AnsysEM' : ['engineering'],
'Ansys-Fluent' : ['engineering'],
'ant' : [],
'ants' : ['MRI'],
'anvio' : ['genomics', 'analytical pipelines', 'genomics utilities - visualization tools'],
'aria' : [],
'armadillo' : ['linear algebra'],
'ase' : ['molecular dynamics'],
'aspera' : [],
'atk' : ['quantum chemistry'],
'ATLAS' : ['linear algebra'],
'atom' : ['text editor'],
'at-spi2-atk' : [],
'at-spi2-core' : [],
'awscli' : [],
'bam-readcount' : ['genomics', 'BAM/SAM', 'genomics utility'],
'bamtools' : ['genomics', 'DNA sequence aligner', 'RNA sequence aligner', 'BAM/SAM'],
'baron' : [],
'bart' : [],
'basespace' : ['genomics', 'analytical pipelines', 'Illumina', 'cloud'],
'bazel' : ['compiler'],
'BBMap' : ['genomics', 'RNA sequence aligner', 'DNA sequence aligner'],
'bcbio_nextgen' : ['genomics', 'python', 'analytical pipelines'],
'BCBToolKit' : ['genomics', 'python', 'analytical pipelines'],
'bcftools' : ['genomics', 'BCF/VCF', 'genomics utlities - analytical pipelines'],
'bcl2fastq' : ['genomics', 'BCL', 'fastq', 'conversion tools'],
'beagle-cpu' : [],
'bedops' : ['genomics', 'analytical pipelines', 'BED'],
'bedtools' : ['genomics', 'analytical pipelines', 'BED', 'BAM/SAM'],
'bismark' : ['genomics', 'bisulfite mapping', 'methylation calling'],
'blas-lapack' : ['linear algebra'],
'blast' : ['genomics', 'DNA sequence aligner', 'RNA sequence aligner', 'protein sequence aligner', 'database search'],
'blatsuite' : ['genomics', 'DNA sequence aligner', 'protein sequence aligner'],
'blcr' : [],
'boost' : ['linear algebra'],
'bowtie' : ['genomics', 'DNA sequence aligner'],
'bowtie2' : ['genomics', 'DNA sequence aligner'],
'bsmap' : ['genomics', 'analytical pipelines', 'bisulfite mapping', 'methylation calling'],
'bwa' : ['genomics', 'DNA sequence aligner', 'RNA sequence aligner'],
'bwrap' : [],
'cairo' : [],
'casa' : [],
'cassi' : ['genomics', 'SNPs', 'variant calling/analysis'],
'cellranger' : ['genomics', 'RNA sequence aligner', 'single-cell RNA-seq'],
'cellranger-atac' : ['genomics', 'single-cell ATAC-seq'],
'CfitsIO' : ['IO Libraries and Formats'],
'cgal' : [],
'charm' : ['parallel'],
'charmpp' : ['parallel'],
'checkm' : ['genomics', 'quality assessment'],
'chemaxon_marvin' : [],
'chemaxon_structure_rep' : [],
'chimera' : [],
'clang' : ['compiler'],
'cmake' : [],
'cmdstan' : [],
'connectome_workbench' : ['MRI'],
'copasul' : [],
'cp2k' : ['quantum chemistry', 'molecular dynamics', 'quantum mechanics'],
'cplex' : [],
'CrisprCasFinder' : ['genomics', 'analytical pipelines', 'CRISPR/cas'],
'cuda' : ['compiler'],
'cufflinks' : ['genomics', 'analytical pipelines', 'RNA-seq'],
'curl' : [],
'cytoscape' : ['genomics', 'network analysis'],
'db' : [],
'ddd' : [],
'deeptools' : ['genomics', 'analytical pipelines', 'RNA-seq', 'ChIP-seq', 'MNase-seq'],
'diamond' : ['genomics', 'protein sequence aligner'],
'diffreps' : ['genomics', 'analytical pipelines', 'ChIP-seq'],
'dynare' : [],
'dyninst' : [],
'eclipse' : [],
'eigen' : ['linear algebra'],
'elfutils' : [],
'emacs' : ['text editor'],
'epacts' : ['genomics', 'analytical pipelines'],
'espresso' : ['quantum chemistry'],
'expansionhunter' : ['genomics', 'analytical pipelines'],
'expat' : [],
'fastani' : ['genomics', 'ANI'],
'fastqc' : ['genomics', 'quality assessment'],
'fasttree' : ['genomics', 'taxonomic/phylogenetic tools'],
'FastTreeMP' : ['genomics', 'taxonomic/phylogenetic tools', 'parallel'],
'fenics27' : [],
'ffmpeg' : [],
'fftw' : [],
'fMRIPrep' : ['MRI'],
'freesurfer' : ['MRI'],
'freetype' : [],
'fsl' : ['MRI'],
'gamess' : ['quantum chemistry'],
'gap' : [],
'gatk' : ['genomics', 'SNPs', 'variant calling/analysis', 'analytical pipelines', 'BAM/SAM', 'BED', 'genomics utilities - data conversion tools'],
'gauss' : ['programming language'],
'Gaussian' : ['quantum chemistry'],
'Gaussian16' : ['quantum chemistry'],
'gcc' : ['compiler'],
'gcloud' : [],
'gdal' : [],
'gdb' : [],
'gdbm' : [],
'gdc-client' : ['genomics', 'data transfer tools'],
'gdk-pixbuf' : [],
'geany' : [],
'GeneTorrent' : ['genomics', 'data transfer tools'],
'GenomeBrowse' : ['genomics', 'visualization tools'],
'geos' : [],
'gettext' : [],
'gffcompare' : ['genomics', 'RNA-seq', 'GTF/GFF'],
'gffread' : ['genomics', 'GTF/GFF', 'data conversion tools'],
'ghc' : [],
'ghostscript' : [],
'git' : [],
'gnumeric' : [],
'gnuplot' : [],
'go' : [],
'gold' : [],
'GotoBlas' : [],
'gpaw' : [],
'grace' : [],
'gradle' : [],
'graphlib' : [],
'graphviz' : [],
'GRASS' : [],
'gromacs' : ['molecular dynamics'],
'gsl' : ['linear algebra'],
'gstreamer' : [],
'gtk+' : [],
'gtool' : ['genomics', 'SNPs', 'variant calling/analysis', 'analytical pipelines'],
'guppy' : ['genomics', 'visualization tools'],
'gurobi' : [],
'hdf5' : ['IO Libraries and Formats'],
'hic-pro' : ['genomics', 'analytical pipelines', 'Hi-C'],
'hisat2' : ['genomics', 'DNA sequence aligner', 'RNA sequence aligner'],
'hmmer' : ['genomics', 'database search', 'DNA sequence aligner', 'protein sequence aligner'],
'homer' : [],
'htslib' : ['genomics', 'DNA sequence aligner', 'RNA sequence aligner'],
'hypre' : [],
'icu4c' : [],
'idba' : ['genomics', 'analytical pipelines', 'genomics utilities - sequence assembler'],
'igv' : ['genomics', 'visualization tools'],
'ImageJ' : [],
'ImageMagick' : [],
'impute2' : ['genomics', 'analytical pipelines'],
'imsl' : [],
'indelocator' : ['genomics', 'variant calling/analysis', 'indel', 'analytical pipelines'],
'intel' : ['compiler'],
'intel-mkl' : ['linear algebra'],
'intltool' : [],
'ipopt' : [],
'iread' : [],
'jags' : ['statistical computing'],
'java' : [],
'jellyfish' : [],
'jq' : [],
'juicer' : [],
'julia' : ['programming language'],
'kallisto' : ['genomics', 'RNA-seq'],
'kentUtils' : ['genomics', 'analytical pipelines', 'genomics utilities - visualization tools'],
'kim-api' : [],
'knitro' : [],
'kraken' : ['genomics', 'taxonomic tools'],
'krona' : ['genomics', 'visualization tools'],
'kSNP' : ['genomics', 'SNPs', 'variant calling/analysis'],
'lammps' : ['molecular dynamics'],
'latte' : [],
'launchmon' : [],
'lazarus' : [],
'leptonica' : [],
'lftp' : [],
'libreoffice' : [],
'liggghts-public' : [],
'lp_solve' : [],
'lumerical' : [],
'MACS2' : ['genomics', 'ChIP-seq'],
'mafft' : ['genomics', 'DNA sequence aligner', 'RNA sequence aligner', 'protein sequence aligner'],
'mageck' : ['genomics', 'CRISPR/cas', 'analytical pipelines'],
'mageck_vispr' : ['genomics', 'CRISPR/cas', 'visualization tools'],
'makedepf90' : [],
'manta' : [],
'mathematica' : ['programming language'],
'matlab' : ['programming language'],
'matlabstan' : [],
'meep' : [],
'megahit' : ['genomics', 'sequence assembler'],
'meme' : ['genomics', 'analytical pipelines', 'motif analysis'],
'mercurial' : [],
'metabat' : ['genomics', 'metagenome binning'],
'metal' : ['genomics', 'analytical pipelines', 'genome meta-analysis'],
'metamap' : [],
'metaxa2' : ['genomics', 'taxonomic tools'],
'metis' : ['genomics', 'annotation tools'],
'mlpack' : [],
'mono' : [],
'motif' : [],
'mpb' : [],
'mpi' : ['parallel', 'compiler'],
'mpi4py' : ['parallel'],
'mricrogl' : [],
'mrnet' : [],
'mrtrix3' : ['MRI'],
'MS-Ropen' : [],
'multiqc' : ['genomics', 'quality assessment'],
'mumps' : [],
'muscle' : ['genomics', 'DNA sequence aligner', 'RNA sequence aligner', 'protein sequence aligner'],
'mutect' : ['genomics', 'analytical pipelines', 'variant calling/analysis', 'cancer genomics'],
'mysql' : [],
'namd' : ['molecular dynamics'],
'nano' : ['text editor'],
'ncl' : [],
'nco' : [],
'ncurses' : [],
'ndiff' : [],
'netCDF' : ['IO Libraries and Formats'],
'netcdf-c' : ['IO Libraries and Formats'],
'netcdf-fortran' : ['IO Libraries and Formats'],
'netlib-scalapack' : ['linear algebra'],
'netlogo' : [],
'ngsplot' : ['genomics', 'visualization tools'],
'nlopt' : [],
'novocraft' : ['genomics', 'analytical pipelines'],
'numactl' : [],
'numpy' : [],
'nwchem' : ['quantum chemistry', 'molecular dynamics', 'quantum mechanics'],
'ocaml' : [],
'octave' : ['programming language'],
'oncotator' : ['genomics', 'annotation tools', 'variant calling/analysis'],
'openbabel' : [],
'openblas' : ['linear algebra'],
'OpenBugs' : ['statistical computing'],
'opencl' : [],
'openmd' : ['molecular dynamics'],
'opera' : [],
'orca' : ['quantum chemistry'],
'osu-micro-benchmarks' : [],
'oxconsole' : [],
'oxedit' : [],
'p7zip' : [],
'pandoc' : [],
'papi' : [],
'parallel' : [],
'paraview' : [],
'parmetis' : [],
'parsec' : ['quantum chemistry'],
'pBWA' : ['genomics', 'DNA sequence aligner', 'RNA sequence aligner', 'parallel'],
'pdflib-lite' : [],
'peer' : [],
'penncnv' : ['genomics', 'SNPs', 'variant calling/analysis'],
'perl' : ['programming language'],
'petsc' : [],
'pexsi' : [],
'phylocsf' : ['genomics', 'RNA-seq'],
'picard' : ['genomics', 'analytical pipelines', 'BAM/SAM', 'BCF/VCF', 'DNA sequence aligner', 'RNA sequence aligner'],
'pigz' : [],
'pindel' : ['genomics', 'variant calling/analysis', 'indel', 'analytical pipelines'],
'plink' : ['genomics', 'analytical pipelines', 'genomics utilities - visualization tools'],
'plumed' : ['molecular dynamics'],
'poppler' : [],
'povray' : [],
'pplacer' : ['genomics', 'analytical pipelines', 'genomics utilities - visualization tools'],
'prada' : ['genomics', 'analytical pipelines', 'RNA-seq', 'BAM/SAM'],
'prodigal' : ['genomics', 'annotation tools'],
'proj' : [],
'protobuf' : [],
'PRSice' : ['genomics', 'analytical pipelines'],
'python' : ['programming language'],
'python-anaconda3' : ['programming language'],
'python-miniconda3' : ['programming language'],
'qchem' : ['quantum chemistry'],
'qctool' : ['genomics', 'annotation tools', 'genomics utilities - quality assessment'],
'qe' : ['quantum chemistry'],
'qhull' : [],
'qiime2' : ['genomics', 'analytical pipelines', 'taxonomic/phylogenetic tools'],
'qt' : [],
'qualimap' : ['genomics', 'DNA sequence aligner', 'RNA sequence aligner', 'RNA-seq', 'ChIP-seq'],
'quantum-espresso' : ['quantum chemistry'],
'R' : ['programming language', 'statistical computing'],
'raxml' : ['genomics', 'phylogenetic tools'],
'rfmix' : ['genomics', 'analytical pipelines', 'taxonomic/phylogenetic tools'],
'rmats2sashimiplot' : ['genomics', 'visualization tools', 'rMATS'],
'rmats_turbo' : ['genomics', 'analytical pipelines', 'RNA-seq', 'rMATS'],
'rsem' : ['genomics', 'analytical pipelines', 'RNA-seq'],
'ruby' : ['programming language'],
'rufus' : ['genomics', 'analytical pipelines', 'variant calling/analysis'],
'sage' : ['genomics', 'analytical pipelines', 'epidemiology tools'],
'sailfish' : [],
'salmon' : ['genomics', 'RNA-seq', 'RNA sequence aligner'],
'samtools' : ['genomics', 'DNA sequence aligner', 'RNA sequence aligner', 'BAM/SAM'],
'sas' : ['programming language'],
'scala' : [],
'scalapack' : ['linear algebra'],
'scallop' : ['genomics', 'RNA-seq', 'RNA sequence aligner'],
'schrodinger' : [],
'scons' : [],
'sdpt3' : [],
'seqkit' : ['genomics', 'analytical pipelines'],
'seqtk' : ['genomics', 'analytical pipelines'],
'shapeit' : ['genomics', 'analytical pipelines', 'SNPs', 'variant calling/analysis'],
'singularity' : [],
'sirius' : [],
'slepc' : [],
'snakemake' : [],
'snpEff' : ['genomics', 'DNA sequence aligner', 'SNPs', 'variant calling/analysis'],
'snptest' : ['genomics', 'SNPs', 'variant calling/analysis'],
'soapdenovo2' : ['genomics', 'DNA sequence aligner', 'genome assembler'],
'SolexaQA++' : ['genomics', 'quality assessment'],
'spades' : ['genomics', 'genome assembler'],
'spark' : [],
'specfem3d_globe' : [],
'speedseq' : ['genomics', 'DNA sequence aligner', 'genome assembler', 'SNPs', 'variant calling/analysis'],
'spfft' : [],
'spglib' : [],
'spla' : [],
'spm' : ['MRI'],
'sqlite' : [],
'sratoolkit' : ['genomics', 'SRA tools'],
'STAR' : ['genomics', 'RNA-seq', 'RNA sequence aligner'],
'STAR-Fusion' : ['genomics', 'RNA-seq', 'RNA sequence aligner'],
'stat' : [],
'stata' : ['programming language'],
'stattransfer' : [],
'strelka' : ['genomics', 'variant calling/analysis'],
'stress' : [],
'stringtie' : ['genomics', 'RNA-seq', 'RNA sequence aligner'],
'subread' : ['genomics', 'RNA-seq', 'RNA sequence aligner', 'DNA sequence aligner', 'variant calling/analysis'],
'SuiteSparse' : [],
'superlu' : [],
'superlu-dist' : [],
'suppa' : ['genomics', 'RNA-seq'],
'swig' : [],
'tar' : [],
'tau' : [],
'tcl' : [],
'telseq' : ['genomics', 'telomere sequencing'],
'tesseract' : [],
'texlive' : [],
'tickwrite' : [],
'tig' : [],
'tmux' : [],
'tophat' : [],
'Tramonto' : [],
'TrimGalore' : ['genomics', 'sequence trimming tool'],
'trimmomatic' : ['genomics', 'sequence trimming tool'],
'uchime' : ['genomics', 'quality assessment'],
'udunits2' : [],
'utilities' : [],
'valgrind' : [],
'vasp' : ['quantum chemistry'],
'vcftools' : ['genomics', 'BCF/VCF', 'analytical pipelines'],
'velvet' : ['genomics', 'DNA sequence aligner', 'genome assembler'],
'vesta' : [],
'vim' : ['text editor'],
'visit' : [],
'vmd' : [],
'voropp' : [],
'vtk' : [],
'wannier' : ['quantum chemistry'],
'wine' : [],
'wxwidgets' : [],
'xander_assembler' : ['genomics', 'DNA sequence aligner', 'genome assembler'],
'xcb-proto' : [],
'xmlsec' : [],
'xpdf' : [],
'xz' : [],
'yaml-cpp' : [],
'yasm' : [],
'zstd' : [],
}



LIST_OF_SOFTWARE = list(LIST_OF_MODULES_TO_SEARCH.keys())

# Create your views here.
letters_a_to_z = [ i for i in string.ascii_uppercase]

def index(request):
    modules = Module.objects.filter(name__in=LIST_OF_SOFTWARE)
    all_keywords = []
    for module in modules:
        if module.primary_keywords is not None:
            for keyword in module.primary_keywords:
                all_keywords.append(keyword)
    all_keywords = set(sorted(all_keywords))
    
    return render(request, 'modules/index.html', {"modules" : modules, "all_keywords" : all_keywords, 'letters_a_to_z' : letters_a_to_z})

def module_json(request):
    modules = Module.objects.filter(name__in=LIST_OF_SOFTWARE)
    modules_list = serializers.serialize('json', modules)
    return HttpResponse(modules_list, content_type="text/json-comment-filtered")
